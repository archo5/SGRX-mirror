
include "common.mpd";


function QUAT_AS_ANGLES( varname, srcname, guiname )
{
	return {
		name = varname,
		type = "Vec3",
		metadata = { label = guiname },
		get = "Q2EA(_OBJ_->" $ srcname $ ")",
		set = "_OBJ_->" $ srcname $ " = EA2Q(_VAR_.get_obj<Vec3>())",
	};
}


ENUM("AnimCharacter_BodyType",
{
	metadata = { label = "Body type" },
	nativetype = "AnimCharacter::BodyType",
	values =
	{
		BodyType_None = { value = ENUM, label = "None" },
		BodyType_Sphere = { value = ENUM, label = "Sphere" },
		BodyType_Capsule = { value = ENUM, label = "Capsule" },
		BodyType_Box = { value = ENUM, label = "Box" },
	}
});

ENUM("AnimCharacter_JointType",
{
	metadata = { label = "Joint type" },
	nativetype = "AnimCharacter::JointType",
	values =
	{
		JointType_None = { value = ENUM, label = "None" },
		JointType_Hinge = { value = ENUM, label = "Hinge" },
		JointType_ConeTwist = { value = ENUM, label = "ConeTwist" },
	}
});

ENUM("AnimCharacter_TransformType",
{
	metadata = { label = "Transform type" },
	nativetype = "AnimCharacter::TransformType",
	values =
	{
		TransformType_None = { value = ENUM, label = "None" },
		TransformType_UndoParent = { value = ENUM, label = "UndoParent" },
		TransformType_Move = { value = ENUM, label = "Move" },
		TransformType_Rotate = { value = ENUM, label = "Rotate" },
	}
});

STRUCT("AnimCharacter_HitBox",
{
	metadata = { label = "Hitbox" },
	nativetype = "AnimCharacter::HitBox",
	props =
	[
		QUAT_AS_ANGLES( "rotationAngles", "rotation", "Rotation" ),
		{ name = "position", type = "Vec3", metadata = { label = "Position" } },
		{ name = "extents", type = "Vec3", metadata = { label = "Extents" } },
		{ name = "multiplier", type = "float", metadata = { label = "Multiplier" } },
	]
});

STRUCT("AnimCharacter_Body",
{
	metadata = { label = "Body" },
	nativetype = "AnimCharacter::Body",
	props =
	[
		QUAT_AS_ANGLES( "rotationAngles", "rotation", "Rotation" ),
		{ name = "position", type = "Vec3", metadata = { label = "Position" } },
		{ name = "type", type = "AnimCharacter_BodyType", metadata = { label = "Body type" } },
		{ name = "size", type = "Vec3", metadata = { label = "Size" } },
	]
});

STRUCT("AnimCharacter_Joint",
{
	metadata = { label = "Joint" },
	nativetype = "AnimCharacter::Joint",
	props =
	[
		{ name = "parent_name", type = "String", metadata = { label = "Parent name" } },
		{ name = "type", type = "AnimCharacter_JointType", metadata = { label = "Joint type" } },
		{ name = "self_position", type = "Vec3", metadata = { label = "Local position" } },
		QUAT_AS_ANGLES( "self_rotationAngles", "self_rotation", "Local rotation" ),
		{ name = "prnt_position", type = "Vec3", metadata = { label = "Parent position" } },
		QUAT_AS_ANGLES( "prnt_rotationAngles", "prnt_rotation", "Parent rotation" ),
		{ name = "turn_limit_1", type = "float", metadata = { label = "Turn limit 1 (Min/X)" } },
		{ name = "turn_limit_2", type = "float", metadata = { label = "Turn limit 2 (Max/Y)" } },
		{ name = "twist_limit", type = "float", metadata = { label = "Twist limit 2 (Z)" } },
	]
});

STRUCT("AnimCharacter_BoneInfo",
{
	metadata = { label = "Bone info" },
	nativetype = "AnimCharacter::BoneInfo",
	props =
	[
		{ name = "name", type = "String", metadata = { label = "Name" } },
		{ name = "hitbox", type = "AnimCharacter_HitBox", metadata = { label = "Hitbox" } },
		{ name = "body", type = "AnimCharacter_Body", metadata = { label = "Body" } },
		{ name = "joint", type = "AnimCharacter_Joint", metadata = { label = "Joint" } },
	]
});

STRUCT("AnimCharacter_Attachment",
{
	metadata = { label = "Attachment" },
	nativetype = "AnimCharacter::Attachment",
	props =
	[
		{ name = "name", type = "String", metadata = { label = "Name" } },
		{ name = "bone", type = "String", metadata = { label = "Bone" } },
		QUAT_AS_ANGLES( "rotationAngles", "rotation", "Rotation" ),
		{ name = "position", type = "Vec3", metadata = { label = "Position" } },
	]
});

STRUCT("AnimCharacter_LayerTransform",
{
	metadata = { label = "Layer transform" },
	nativetype = "AnimCharacter::LayerTransform",
	props =
	[
		{ name = "bone", type = "String", metadata = { label = "Bone" } },
		{ name = "type", type = "AnimCharacter_TransformType", metadata = { label = "Transform type" } },
		{ name = "posaxis", type = "Vec3", metadata = { label = "Position/Axis" } },
		{ name = "angle", type = "float", metadata = { label = "Rotation angle" } },
		{ name = "base", type = "float", metadata = { label = "Base offset" } },
	]
});

STRUCT("AnimCharacter_LayerTransformArray",
{
	nativetype = "Array<AnimCharacter::LayerTransform>",
	index = { subtype = "AnimCharacter_LayerTransform" },
});

STRUCT("AnimCharacter_Layer",
{
	nativetype = "AnimCharacter::Layer",
	props =
	[
		{ name = "name", type = "String", metadata = { label = "Name" } },
		{ name = "transforms", type = "AnimCharacter_LayerTransformArray", metadata = { label = "Layer transforms" } },
		{ name = "amount", type = "float", metadata = { label = "Test amount" } },
	]
});

STRUCT("AnimCharacter_MaskCmd",
{
	metadata = { label = "Mask command" },
	nativetype = "AnimCharacter::MaskCmd",
	props =
	[
		{ name = "bone", type = "String", metadata = { label = "Bone", edit = "bone", edit_requestReload = true } },
		{ name = "weight", type = "float", metadata = { label = "Weight", min = 0, max = 1 } },
		{ name = "children", type = "bool", metadata = { label = "Include children" } },
	]
});

STRUCT("AnimCharacter_MaskCmdArray",
{
	nativetype = "Array<AnimCharacter::MaskCmd>",
	index = { subtype = "AnimCharacter_MaskCmd" },
	props =
	[
		{ name = "__size", type = "int32_t", get = "_OBJ_->size()", set = "_OBJ_->resize(_VAR_.get_int32())", metadata = { visible = false, min = 0, max = 1000 } },
	]
});

STRUCT("AnimCharacter_Mask",
{
	metadata = { label = "Mask" },
	nativetype = "AnimCharacter::Mask",
	methods =
	{
		__tostring = { params = [ "int32_t", "StringPtr" ] },
	},
	props =
	[
		{ name = "name", type = "String", metadata = { label = "Name" } },
		{ name = "cmds", type = "AnimCharacter_MaskCmdArray", metadata = { label = "Mask commands" } },
	]
});

STRUCT("AnimCharacter_MaskArray",
{
	nativetype = "Array<AnimCharacter::Mask>",
	index = { subtype = "AnimCharacter_Mask" },
	methods =
	{
		move_item = { params = [ "int32_t", "int32_t" ] },
	},
	props =
	[
		{ name = "__size", type = "int32_t", get = "_OBJ_->size()", set = "_OBJ_->resize(_VAR_.get_int32())", metadata = { visible = false, min = 0, max = 1000 } },
	]
});

STRUCT("AnimCharacter",
{
	metadata = { label = "Character" },
	props =
	[
		{ name = "mesh", type = "String", metadata = { label = "Mesh", edit = "mesh" } },
		{ name = "masks", type = "AnimCharacter_MaskArray", metadata = { label = "Masks" } },
	]
});

